@page

<script src="https://code.highcharts.com/stock/highstock.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>

@using Highsoft.Web.Mvc.Stocks
@using Highsoft.Web.Mvc.Stocks.Rendering
@model IndexModel
@{
    var chartOptions =
        new Highstock
        {
            Chart = new Chart
            {
                Events = new ChartEvents
                {
                    Load = "requestData"
                }
            },
            RangeSelector = new RangeSelector
            {
                Selected = 4
            },
            XAxis = new List<XAxis>
            {
                new XAxis
                {
                    Ordinal = true
                }
            },

            YAxis = new List<YAxis>
            {
                new YAxis
                {
                    Labels = new YAxisLabels
                    {
                        Formatter = "formatYAxis",
                    },
                    PlotLines = new List<YAxisPlotLines>
                    {
                        new YAxisPlotLines
                        {
                            Value = 0,
                            Width = 2,
                            Color = "silver"
                        }
                    }
                }
            },
            PlotOptions = new PlotOptions
            {
                Series = new PlotOptionsSeries
                {
                    Compare = PlotOptionsSeriesCompare.Percent
                }
            },
            Tooltip = new Tooltip
            {
                PointFormat = @"<span style='color:{series.color}'>{series.name}</span>: <b>{point.y}</b> ({point.change}%)<br/>",
                ValueDecimals = 2
            },
            Series = ViewData["SeriesData"] as List<Series>
        };

    chartOptions.ID = "chart";
    var renderer = new HighstockRenderer(chartOptions);
}

@Html.Raw(renderer.RenderHtml())

<script>
    async function requestData() {
        const result = await fetch('./?handler=ChartData');
        if (result.ok) {
        //chart.series = [{name: "test"},{name: "test2"}];
        
        /*    const data = await result.json();
            const [date, value] = data[0];
            const point = [new Date(date).getTime(), value * 10];
            const series = chart.series[0],
                shift = series.data.length > 20; // shift if the series is longer than 20
            // add the point
            chart.series[0] .addPoint(point, true, shift);*/
            // call it again after one second
            setTimeout(requestData, 1000);
        }
    }

    function formatYAxis() {
        return (this.value > 0 ? ' + ' : '') + this.value + '%';
    }
    
</script>